#!/bin/bash -eu
# Automate Variscite build instructions as a basis for reproducing customer build issues.

# Fetch repo-tool manifest and initialize repo-tool's configuration in this dir
if ! [ -d .repo ]; then 
    repo init --no-clone-bundle -u https://github.com/varigit/variscite-bsp-platform.git -b scarthgap -m imx-6.6.23-2.0.0.xml
fi

# Optionally add a "local manifest" to repo-tool configuration to include our custom layer.
#   - https://gerrit.googlesource.com/git-repo/+/master/docs/manifest-format.md#local-manifests
if [ -v ADD_XILICA_LAYERS ]; then
    mkdir -p .repo/local_manifests
    cat << EOF > .repo/local_manifests/xilica-repo-manifest.xml
    <?xml version="1.0" encoding="UTF-8"?>
    <manifest>
        <remote name="timblaktu-github" alias="origin" fetch="git@bitbucket.org:xilica" revision="yocto" />
        <project name="meta-xilica-tr-sys" path="sources/meta-xilica-tr-sys" remote="timblaktu-github" />
    </manifest>
EOF
fi

# Clone or Fetch/Update all repos described in the repo-tool configuration
repo sync --no-clone-bundle --jobs $(nproc) --fail-fast --optimized-fetch

# Setup OE Environment, exec setup script if oebuild doesnt exist or is empty, else source env script
set +eu  # bc scripts aren't resilient to errexit and nounset
if [ ! -d oebuild ] || [ -n "$(find oebuild -type d -empty -print -quit)" ]; then
    MACHINE=imx8mp-var-dart DISTRO=fsl-imx-xwayland EULA=y . var-setup-release.sh oebuild
else
    source setup-environment oebuild
fi
set -eu  # bc scripts aren't resilient to errexit and nounset

# Optionally add custom layer meta-xilica-tr-sys to the generated bblayers.conf (once)
if [ -v ADD_XILICA_LAYERS ]; then
    while read BBLAYER_LINE; do
        if ! grep -qsxF "$BBLAYER_LINE" conf/bblayers.conf; then
            echo "$BBLAYER_LINE" >> conf/bblayers.conf
        fi
    done <<EOF
BBLAYERS += "\${BSPDIR}/sources/meta-xilica-tr-sys"
EOF
fi

# Copy site.conf from repo root dir to build/conf dir
#   - this maps DL_DIR, SSTATE_DIR to host bind mounts, etc..
cp /opt/hostroot/site.conf conf/

# Patch the local.conf generated by oeenv setup scripts. 
#
# We aspire to leave the generated local.conf untouched, but:
#   - Since OE build system prioritizes local.conf over site.conf, we cannot override values
#     in local.conf using site.conf. We must modify local.conf so it does not set the value.
sed -i 's/^\s*DL_DIR.*$/# DL_DIR is overridden in site.conf. Since OE build system reads local.conf after site.conf, it must be commented out or deleted here./' /workdir/oebuild/conf/local.conf

sanitise_and_indent() { 
    color=2
    for filename in "$@"; do
        printf "$(tput bold)$(tput setaf $color)$filename$(tput dim)\n$(sed -e '/^\s*#.*$/d;/^\s*$/d;s/^/    /' $filename)$(tput sgr0)\n\n"
        color=$(( color * 2 ))
    done
}
cat << EOF

OE Environment Setup is Complete. Local User Configuration shown below:

$(sanitise_and_indent /workdir/oebuild/conf/{local,site}.conf)

Now running specified command:

    $*

EOF

"$@"
